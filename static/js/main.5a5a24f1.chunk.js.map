{"version":3,"sources":["atoms/plate.ts","components/PlateCard.tsx","containers/PlateList.tsx","components/PlateFilter.tsx","components/PlatePagination.tsx","App.tsx","serviceWorker.ts","theme.ts","index.tsx"],"names":["initialFavs","initialPlates","data","plateState","atom","key","default","centerSkillListState","Array","from","Set","flatMap","f","centerSkill","flat","map","m","name","activeSkillListState","activeSkill","liveSkillListState","liveSkill","json","localStorage","getItem","Map","JSON","parse","initialRalities","favsState","defaultRalities","ralityJson","initialAttributes","initialCenterSkill","defaultAttributes","attributeJson","initialActiveSkill","initialLiveSkill","initialCompatibleDivas","defaultCompatibleDivas","compatibleDivaJson","plateFilterSettingState","rality","attribute","compatibleDiva","plateFilterState","selector","get","filter","state","useRality","useAttribute","useCenterSkill","useActiveSkill","useLiveSkill","useCompatibleDiva","useFilterCount","values","every","v","filteredPlateState","list","filterState","count","length","results","p","toString","filterRality","filterType","indexOf","filterCenterSkill","filterActiveSkill","filterLiveSkill","some","filterEffectiveDiva","platePagingState","current","numberOf","pagedPlateState","filteredList","paging","pages","Math","ceil","slice","PlateCard","props","plate","useState","released","setReleased","useRecoilState","favs","setFavs","Paper","style","margin","padding","background","a","getPlateColor","clear","width","float","color","id","onClick","fav","undefined","set","delete","onFavChange","src","image","alt","listStyle","paddingLeft","marginLeft","status","total","voice","soul","charm","rank","useStyles","makeStyles","theme","createStyles","root","flexGrow","item","minWidth","PlateList","classes","plates","useRecoilValue","Grid","container","className","spacing","heading","fontSize","typography","pxToRem","fontWeight","fontWeightRegular","details","divaIcons","typeIcons","PlateFilter","setFilter","centerSkillList","activeSkillList","liveSkillList","filterCount","Accordion","AccordionSummary","expandIcon","ExpandMore","aria-controls","Badge","badgeContent","Typography","AccordionDetails","justify","xs","sm","variant","ToggleButton","paddingRight","paddingTop","paddingBottom","value","onChange","forEach","k","push","selected","generateRalityFilter","title","generateAttributeFilter","e","currentTarget","l","i","generateCompatibleDivaFilter","marginTop","PlatePagination","filteredPlates","setPaging","Pagination","size","page","shape","event","PersistenceObserver","useRecoilTransactionObserver_UNSTABLE","snapshot","getLoadable","contents","favsJson","stringify","setItem","type","typeJson","effectiveDiva","effectiveDivaJson","App","document","Container","maxWidth","marginBottom","Divider","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","createMuiTheme","palette","primary","main","secondary","red","A400","ReactDOM","render","StrictMode","ThemeProvider","CssBaseline","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.5a5a24f1.chunk.js","sourcesContent":["import { atom, selector } from \"recoil\";\nimport plates from \"../resources/plates.json\";\n\nexport interface Skill {\n  name: string;\n  rank: string;\n  conditions: string;\n}\n\nexport interface PlateStatus {\n  total: number;\n  soul: number;\n  voice: number;\n  charm: number;\n  life: number;\n  suport: number;\n  foldWave: number;\n  luck: number;\n}\n\nexport interface Plate {\n  id: string;\n  uri: string;\n  name: string;\n  rality: number[];\n  attribute: string;\n  series: string;\n  image: string[];\n  episode: string;\n  centerSkill: Skill[][];\n  activeSkill: Skill[][];\n  liveSkill: Skill[][];\n  compatibleDiva: string[];\n  status: PlateStatus[];\n  lastUpdated: string;\n}\n\n// export interface Plate {\n//   Id: number;\n//   Url: string;\n//   Name: string;\n//   InitialRarity: number;\n//   MaxRarity: number;\n//   Attribute: string;\n//   InitialImage: string;\n//   ReleasedImage: string;\n//   Episod: string;\n//   CenterSkill: string;\n//   CenterSkillCondition: string;\n//   ActiveSkill: string;\n//   ActiveSkillCondition: string;\n//   LiveSkill: string;\n//   LiveSkillCondition: string;\n//   EffectiveDiva: string[];\n//   InitialTotal: number;\n//   MaxTotal: number;\n//   InitialSoul: number;\n//   MaxSoul: number;\n//   InitialVoice: number;\n//   MaxVoice: number;\n//   InitialCharm: number;\n//   MaxCharm: number;\n//   InitialLife: number;\n//   MaxLife: number;\n//   InitialSuport: number;\n//   MaxSuport: number;\n//   InitialForldWave: number;\n//   MaxForldWave: number;\n//   MaxLuck: number;\n//   ExpectedLife: number;\n//   ExpectedScore: number;\n//   ExpectedItem: number;\n//   ExpectedForldWave: number;\n//   ExpectedAttack: number;\n//   Discription: string;\n//   Error: [];\n// }\n\nconst initialPlates: Plate[] = plates.data;\n\nexport const plateState = atom({\n  key: \"plate\",\n  default: initialPlates,\n});\n\nexport const centerSkillListState = atom({\n  key: \"centerSkillList\",\n  default: Array.from(\n    new Set(\n      initialPlates\n        .flatMap((f) => f.centerSkill)\n        .flat()\n        .map((m) => m.name)\n    )\n  ),\n});\n\nexport const activeSkillListState = atom({\n  key: \"activeSkillList\",\n  default: Array.from(\n    new Set(\n      initialPlates\n        .flatMap((f) => f.activeSkill)\n        .flat()\n        .map((m) => m.name)\n    )\n  ),\n});\n\nexport const liveSkillListState = atom({\n  key: \"liveSkillList\",\n  default: Array.from(\n    new Set(\n      initialPlates\n        .flatMap((f) => f.liveSkill)\n        .flat()\n        .map((m) => m.name)\n    )\n  ),\n});\n\nlet initialFavs: Map<string, boolean>;\nvar json = localStorage.getItem(\"favsPlate\");\nif (json !== null) {\n  initialFavs = new Map(JSON.parse(json));\n} else {\n  initialFavs = new Map<string, boolean>();\n}\n\nexport const favsState = atom({\n  key: \"favsPlate\",\n  default: initialFavs,\n});\n\nexport const defaultRalities = new Map([\n  [\"1\", true],\n  [\"2\", true],\n  [\"3\", true],\n  [\"4\", true],\n  [\"5\", true],\n  [\"6\", true],\n]);\nlet initialRalities: Map<string, boolean>;\nvar ralityJson = localStorage.getItem(\"plateRality\");\nif (ralityJson !== null) {\n  initialRalities = new Map(JSON.parse(ralityJson));\n} else {\n  initialRalities = new Map(defaultRalities);\n}\n\nexport const defaultAttributes = new Map([\n  [\"star\", true],\n  [\"love\", true],\n  [\"life\", true],\n]);\nlet initialAttributes: Map<string, boolean>;\nvar attributeJson = localStorage.getItem(\"plateAttribute\");\nif (attributeJson !== null) {\n  initialAttributes = new Map(JSON.parse(attributeJson));\n} else {\n  initialAttributes = new Map(defaultAttributes);\n}\n\nlet initialCenterSkill: string;\nvar centerSkill = localStorage.getItem(\"cemterSkill\");\ninitialCenterSkill = centerSkill !== null ? centerSkill : \"\";\n\nlet initialActiveSkill: string;\nvar activeSkill = localStorage.getItem(\"activeSkill\");\ninitialActiveSkill = activeSkill !== null ? activeSkill : \"\";\n\nlet initialLiveSkill: string;\nvar liveSkill = localStorage.getItem(\"liveSkill\");\ninitialLiveSkill = liveSkill !== null ? liveSkill : \"\";\n\nexport const defaultCompatibleDivas = new Map([\n  [\"フレイア・ヴィオン\", true],\n  [\"美雲・ギンヌメール\", true],\n  [\"カナメ・バッカニア\", true],\n  [\"マキナ・中島\", true],\n  [\"レイナ・プラウラー\", true],\n  [\"ランカ・リー\", true],\n  [\"シェリル・ノーム\", true],\n  [\"ミレーヌ・ジーナス\", true],\n  [\"熱気バサラ\", true],\n  [\"リン・ミンメイ\", true],\n]);\nlet initialCompatibleDivas: Map<string, boolean>;\nvar compatibleDivaJson = localStorage.getItem(\"plateCompatibleDiva\");\nif (compatibleDivaJson !== null) {\n  initialCompatibleDivas = new Map(JSON.parse(compatibleDivaJson));\n} else {\n  initialCompatibleDivas = new Map(defaultCompatibleDivas);\n}\n\nexport interface PlateFilterSetting {\n  rality: Map<string, boolean>;\n  attribute: Map<string, boolean>;\n  centerSkill: string;\n  activeSkill: string;\n  liveSkill: string;\n  compatibleDiva: Map<string, boolean>;\n}\n\nexport const plateFilterSettingState = atom({\n  key: \"plateFilterSettingState\",\n  default: {\n    rality: initialRalities,\n    attribute: initialAttributes,\n    centerSkill: initialCenterSkill,\n    activeSkill: initialActiveSkill,\n    liveSkill: initialLiveSkill,\n    compatibleDiva: initialCompatibleDivas,\n  } as PlateFilterSetting,\n});\n\nexport interface PlateFilterState {\n  useRality: boolean;\n  useAttribute: boolean;\n  useCenterSkill: boolean;\n  useActiveSkill: boolean;\n  useLiveSkill: boolean;\n  useCompatibleDiva: boolean;\n  useFilterCount: number;\n}\n\nexport const plateFilterState = selector({\n  key: \"plateFilterState\",\n  get: ({ get }) => {\n    const filter = get(plateFilterSettingState);\n    let state: PlateFilterState = {\n      useRality: false,\n      useAttribute: false,\n      useCenterSkill: false,\n      useActiveSkill: false,\n      useLiveSkill: false,\n      useCompatibleDiva: false,\n      useFilterCount: 0,\n    };\n\n    if (!Array.from(filter.rality.values()).every((v) => v)) {\n      state.useRality = true;\n      state.useFilterCount++;\n    }\n    if (!Array.from(filter.attribute.values()).every((v) => v)) {\n      state.useAttribute = true;\n      state.useFilterCount++;\n    }\n    if (filter.centerSkill !== \"\") {\n      state.useCenterSkill = true;\n      state.useFilterCount++;\n    }\n    if (filter.activeSkill !== \"\") {\n      state.useActiveSkill = true;\n      state.useFilterCount++;\n    }\n    if (filter.liveSkill !== \"\") {\n      state.useLiveSkill = true;\n      state.useFilterCount++;\n    }\n    if (!Array.from(filter.compatibleDiva.values()).every((v) => v)) {\n      state.useCompatibleDiva = true;\n      state.useFilterCount++;\n    }\n    return state;\n  },\n});\n\nexport interface FilteredPlate {\n  count: number;\n  list: Plate[];\n}\n\nexport const filteredPlateState = selector({\n  key: \"filteredPlateState\",\n  get: ({ get }) => {\n    const list = get(plateState);\n    const filter = get(plateFilterSettingState);\n    const filterState = get(plateFilterState);\n    const filterRality = (p: Plate) =>\n      filter.rality.get(p.rality[0].toString());\n    const filterType = (p: Plate) => filter.attribute.get(p.attribute);\n    const filterCenterSkill = (p: Plate) =>\n      p.centerSkill\n        .flat()\n        .flatMap((f) => f.name)\n        .indexOf(filter.centerSkill) !== -1;\n    const filterActiveSkill = (p: Plate) =>\n      p.activeSkill\n        .flat()\n        .flatMap((f) => f.name)\n        .indexOf(filter.activeSkill) !== -1;\n    const filterLiveSkill = (p: Plate) =>\n      p.liveSkill\n        .flat()\n        .flatMap((f) => f.name)\n        .indexOf(filter.liveSkill) !== -1;\n    const filterEffectiveDiva = (p: Plate) => {\n      if (p.compatibleDiva === null) return true;\n      return p.compatibleDiva.some((v) => filter.compatibleDiva.get(v));\n    };\n\n    if (filterState.useFilterCount === 0) {\n      return { count: list.length, list: list } as FilteredPlate;\n    }\n    var results = list.filter(\n      (p) =>\n        (!filterState.useRality || filterRality(p)) &&\n        (!filterState.useAttribute || filterType(p)) &&\n        (!filterState.useCenterSkill || filterCenterSkill(p)) &&\n        (!filterState.useActiveSkill || filterActiveSkill(p)) &&\n        (!filterState.useLiveSkill || filterLiveSkill(p)) &&\n        (!filterState.useCompatibleDiva || filterEffectiveDiva(p))\n    );\n    return {\n      count: results.length,\n      list: results,\n    } as FilteredPlate;\n    // TODO : お気に入りを使ってフィルタリングするかどうかを指定するフィルタリング項目を画面とfavsStateに追加する（でもlocalstorageに保存するのは配列のみにしたい）\n    //var usedFavs = usedType.filter((item) => favs.find((f) => f === item.Id));\n  },\n});\n\nexport const platePagingState = atom({\n  key: \"paging\",\n  default: {\n    current: 1,\n    numberOf: 10,\n  },\n});\n\nexport const pagedPlateState = selector({\n  key: \"pagedPlateState\",\n  get: ({ get }) => {\n    const filteredList = get(filteredPlateState);\n    const paging = get(platePagingState);\n    const count = filteredList.count;\n    if (count <= paging.numberOf) return filteredList.list;\n    const pages = Math.ceil(count / paging.numberOf);\n    const current = paging.current > pages ? pages : paging.current;\n    return filteredList.list.slice(\n      paging.numberOf * (current - 1),\n      paging.numberOf * current\n    );\n  },\n});\n","import React, { useState } from \"react\";\nimport { Plate, favsState } from \"../atoms/plate\";\nimport { useRecoilState } from \"recoil\";\nimport { Paper } from \"@material-ui/core\";\n\nexport type PlateCardProps = {\n  plate: Plate;\n  children?: React.ReactNode;\n};\n\nexport const PlateCard = (props: PlateCardProps) => {\n  var plate = props.plate;\n  const [released, setReleased] = useState(false);\n  const [favs, setFavs] = useRecoilState(favsState);\n  const onChangeRality = () => {\n    if (plate.rality.length === 1) return;\n    setReleased(!released);\n  };\n\n  const getPlateColor = (a: string) => {\n    switch (a) {\n      case \"star\":\n        return \"#FFFF99\";\n      case \"love\":\n        return \"#FFCCFF\";\n      case \"life\":\n        return \"#99FFFF\";\n      default:\n        return \"white\";\n    }\n  };\n\n  const onOpenDetail = (plate: Plate) => {};\n  const onFavChange = (id: string) => {\n    let fav = favs.get(id);\n    if (fav === undefined) {\n      setFavs((f) => {\n        return f.set(id, false);\n      });\n    } else if (!fav && plate.rality.length !== 1) {\n      setFavs((f) => {\n        return f.set(id, true);\n      });\n    } else {\n      setFavs((f) => {\n        f.delete(id);\n        return f;\n      });\n    }\n  };\n\n  return (\n    <Paper\n      style={{\n        margin: 2,\n        padding: 5,\n        background: getPlateColor(plate.attribute),\n      }}\n    >\n      <div style={{ clear: \"left\" }}>\n        <h4 style={{ width: \"95%\", margin: 0, float: \"left\" }}>{plate.name}</h4>\n        <span\n          style={{\n            float: \"left\",\n            color: favs.get(plate.id) ? \"purple\" : \"black\",\n          }}\n          onClick={() => onFavChange(plate.id)}\n        >\n          {favs.get(plate.id) !== undefined ? \"★\" : \"☆\"}\n        </span>\n      </div>\n      <img\n        src={\n          released && plate.image.length > 1 ? plate.image[1] : plate.image[0]\n        }\n        alt={plate.name}\n        style={{ width: \"65%\", float: \"left\" }}\n        onClick={onChangeRality}\n      />\n      <div style={{ float: \"left\", width: \"35%\" }}>\n        <ul\n          style={{\n            listStyle: \"none\",\n            float: \"left\",\n            paddingLeft: 0,\n            marginLeft: 5,\n          }}\n        >\n          <li>Total:{plate.status[1].total}</li>\n          <li>Voice:{plate.status[1].voice}</li>\n          <li>Soul: {plate.status[1].soul}</li>\n          <li>Charm:{plate.status[1].charm}</li>\n        </ul>\n      </div>\n      <div style={{ clear: \"left\" }}>\n        <ul style={{ listStyle: \"none\", float: \"left\", paddingLeft: 0 }}>\n          <li>\n            Center:{plate.centerSkill.flat()[0]?.name}{\" \"}\n            {plate.centerSkill.flat()[0]?.rank}\n          </li>\n          <li>\n            Active:{plate.activeSkill.flat()[0]?.name}{\" \"}\n            {plate.activeSkill.flat()[0]?.rank}\n          </li>\n          <li>\n            Live :{plate.liveSkill.flat()[0]?.name}{\" \"}\n            {plate.liveSkill.flat()[0]?.rank}\n          </li>\n        </ul>\n        <div style={{ clear: \"left\" }}>\n          <button onClick={() => onOpenDetail(plate)} style={{ width: \"100%\" }}>\n            Detail\n          </button>\n        </div>\n      </div>\n    </Paper>\n  );\n};\n","import React from \"react\";\nimport { useRecoilValue } from \"recoil\";\nimport { pagedPlateState } from \"../atoms/plate\";\nimport { PlateCard } from \"../components/PlateCard\";\nimport { Theme, createStyles, makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n      margin: 5,\n    },\n    item: {\n      minWidth: 360,\n    },\n  })\n);\n\ntype PlateListProps = {\n  children?: React.ReactNode;\n};\n\nexport const PlateList = (props: PlateListProps) => {\n  const classes = useStyles();\n  const plates = useRecoilValue(pagedPlateState);\n\n  return (\n    <Grid container className={classes.root} spacing={1}>\n      {plates.map((p) => (\n        <Grid item key={p.id} className={classes.item}>\n          <PlateCard plate={p} />\n        </Grid>\n      ))}\n    </Grid>\n  );\n};\n","import React from \"react\";\nimport { useRecoilState, useRecoilValue } from \"recoil\";\nimport {\n  plateFilterSettingState,\n  centerSkillListState,\n  activeSkillListState,\n  liveSkillListState,\n  defaultRalities,\n  defaultAttributes,\n  defaultCompatibleDivas,\n  plateFilterState,\n} from \"../atoms/plate\";\nimport { ToggleButton } from \"@material-ui/lab\";\nimport {\n  Typography,\n  Accordion,\n  AccordionSummary,\n  AccordionDetails,\n  createStyles,\n  makeStyles,\n  Theme,\n  Badge,\n  Grid,\n} from \"@material-ui/core\";\nimport { ExpandMore } from \"@material-ui/icons\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      width: \"100%\",\n    },\n    heading: {\n      fontSize: theme.typography.pxToRem(15),\n      fontWeight: theme.typography.fontWeightRegular,\n    },\n    details: {},\n  })\n);\n\ntype PlateFilterProps = {\n  children?: React.ReactNode;\n};\n\nconst divaIcons = new Map([\n  [\n    \"フレイア・ヴィオン\",\n    \"https://cdn-image.pf.dena.com/fa9c327e33426cd5e3dff097aa3feee754c90f9a/1/dc7c858c-d70b-3ae8-8774-b0978ccc052e.png\",\n  ],\n  [\n    \"美雲・ギンヌメール\",\n    \"https://cdn-image.pf.dena.com/fa9c327e33426cd5e3dff097aa3feee754c90f9a/1/b658d01c-80d0-31d5-a4ea-8a2d51046d53.png\",\n  ],\n  [\n    \"カナメ・バッカニア\",\n    \"https://cdn-image.pf.dena.com/fa9c327e33426cd5e3dff097aa3feee754c90f9a/1/a9a410e5-8227-3b2b-afbe-0b5999af2653.png\",\n  ],\n  [\n    \"マキナ・中島\",\n    \"https://cdn-image.pf.dena.com/fa9c327e33426cd5e3dff097aa3feee754c90f9a/1/2feadf81-1b66-353f-b6eb-0a25bd634660.png\",\n  ],\n  [\n    \"レイナ・プラウラー\",\n    \"https://cdn-image.pf.dena.com/fa9c327e33426cd5e3dff097aa3feee754c90f9a/1/9f3690c0-c028-35b4-ae03-b346d4610853.png\",\n  ],\n  [\n    \"ランカ・リー\",\n    \"https://cdn-image.pf.dena.com/fa9c327e33426cd5e3dff097aa3feee754c90f9a/1/a16267e6-6b37-3f7d-9cde-d88bfd3969a8.png\",\n  ],\n  [\n    \"シェリル・ノーム\",\n    \"https://cdn-image.pf.dena.com/fa9c327e33426cd5e3dff097aa3feee754c90f9a/1/53f86292-f967-3a57-84cd-2f944420a58c.png\",\n  ],\n  [\n    \"ミレーヌ・ジーナス\",\n    \"https://cdn-image.pf.dena.com/fa9c327e33426cd5e3dff097aa3feee754c90f9a/1/5770e99d-e573-303f-952c-166a4aecc248.png\",\n  ],\n  [\n    \"熱気バサラ\",\n    \"https://cdn-image.pf.dena.com/fa9c327e33426cd5e3dff097aa3feee754c90f9a/1/04705704-7e76-3c66-b44e-044a018071d0.png\",\n  ],\n  [\n    \"リン・ミンメイ\",\n    \"https://cdn-image.pf.dena.com/fa9c327e33426cd5e3dff097aa3feee754c90f9a/1/e6e2e53c-b216-37f1-ae81-b13261ae6afe.png\",\n  ],\n]);\n\nconst typeIcons = new Map([\n  [\n    \"star\",\n    \"https://cdn-image.pf.dena.com/fa9c327e33426cd5e3dff097aa3feee754c90f9a/1/23ae18f6-1a63-33f8-bc97-bc1708d7d405.png\",\n  ],\n  [\n    \"love\",\n    \"https://cdn-image.pf.dena.com/fa9c327e33426cd5e3dff097aa3feee754c90f9a/1/1406e264-badf-3721-bcd0-be3375593d1d.png\",\n  ],\n  [\n    \"life\",\n    \"https://cdn-image.pf.dena.com/fa9c327e33426cd5e3dff097aa3feee754c90f9a/1/f6c1446e-9946-3f65-900d-0fd3236b0afb.png\",\n  ],\n]);\n\nexport const PlateFilter = (props: PlateFilterProps) => {\n  const classes = useStyles();\n  const [filter, setFilter] = useRecoilState(plateFilterSettingState);\n  // const [effectiveDivaFilter, setEffectiveDivaFilter] = useRecoilState(\n  //   plateEffectiveDivaState\n  // );\n  const centerSkillList = useRecoilValue(centerSkillListState);\n  const activeSkillList = useRecoilValue(activeSkillListState);\n  const liveSkillList = useRecoilValue(liveSkillListState);\n\n  const generateRalityFilter = () => {\n    let results: JSX.Element[] = [];\n    filter.rality.forEach((v, k) => {\n      results.push(\n        <ToggleButton\n          key={\"rality\" + k}\n          selected={v}\n          value={v}\n          onChange={() =>\n            setFilter((f) => {\n              return { ...f, rality: f.rality.set(k, !v) };\n            })\n          }\n          style={{\n            paddingLeft: 7,\n            paddingRight: 7,\n            paddingTop: 0,\n            paddingBottom: 0,\n            margin: 1,\n          }}\n        >\n          {k}\n        </ToggleButton>\n      );\n    });\n    return results;\n  };\n\n  const generateAttributeFilter = () => {\n    let results: JSX.Element[] = [];\n    filter.attribute.forEach((v, k) => {\n      results.push(\n        <ToggleButton\n          key={\"type\" + k}\n          value={v}\n          selected={v}\n          onChange={() =>\n            setFilter((f) => {\n              return { ...f, attribute: f.attribute.set(k, !v) };\n            })\n          }\n          style={{ padding: 0, margin: 1 }}\n        >\n          <img src={typeIcons.get(k)} width={30} alt={k} title={k} />\n        </ToggleButton>\n      );\n    });\n    return results;\n  };\n\n  const generateCompatibleDivaFilter = () => {\n    let results: JSX.Element[] = [];\n    filter.compatibleDiva.forEach((v, k) => {\n      results.push(\n        <ToggleButton\n          key={\"diva\" + (results.length + 1)}\n          value={v}\n          selected={v}\n          onChange={() =>\n            setFilter((f) => {\n              return { ...f, compatibleDiva: f.compatibleDiva.set(k, !v) };\n            })\n          }\n          style={{ padding: 0, marginLeft: 1 }}\n        >\n          <img src={divaIcons.get(k)} width={30} alt={k} title={k} />\n        </ToggleButton>\n      );\n    });\n    return results;\n  };\n  const filterCount = useRecoilValue(plateFilterState);\n  return (\n    <div className={classes.root}>\n      <Accordion>\n        <AccordionSummary\n          expandIcon={<ExpandMore />}\n          aria-controls=\"panel1a-content\"\n          id=\"panel1a-header\"\n        >\n          <Badge color=\"secondary\" badgeContent={filterCount.useFilterCount}>\n            <Typography className={classes.heading}>フィルター</Typography>\n          </Badge>\n        </AccordionSummary>\n        <AccordionDetails className={classes.details}>\n          <Grid container justify=\"center\">\n            <Grid item xs={12} sm={4}>\n              <Typography variant=\"subtitle2\">レアリティ</Typography>\n              <ToggleButton\n                key={\"ralityAll\"}\n                style={{\n                  paddingLeft: 7,\n                  paddingRight: 7,\n                  paddingTop: 0,\n                  paddingBottom: 0,\n                  margin: 1,\n                }}\n                value={\"all\"}\n                onChange={() =>\n                  setFilter((f) => {\n                    return { ...f, rality: new Map(defaultRalities) };\n                  })\n                }\n              >\n                ALL\n              </ToggleButton>\n              {generateRalityFilter()}\n            </Grid>\n            <Grid item xs={12} sm={4}>\n              <Typography variant=\"subtitle2\">属性</Typography>\n              <ToggleButton\n                key={\"typeAll\"}\n                style={{\n                  paddingLeft: 7,\n                  paddingRight: 7,\n                  paddingTop: 3,\n                  paddingBottom: 3,\n                  margin: 1,\n                }}\n                value={\"all\"}\n                onChange={() =>\n                  setFilter((f) => {\n                    return { ...f, attribute: new Map(defaultAttributes) };\n                  })\n                }\n              >\n                ALL\n              </ToggleButton>\n              {generateAttributeFilter()}\n            </Grid>\n            <Grid item xs={12} sm={4}>\n              <Typography variant=\"subtitle2\">センタースキル</Typography>\n              <select\n                value={filter.centerSkill}\n                onChange={(e) =>\n                  setFilter((f) => {\n                    return { ...f, centerSkill: e.currentTarget.value };\n                  })\n                }\n              >\n                <option value={\"\"}></option>\n                {centerSkillList.map((l, i) => (\n                  <option key={\"centerSkill\" + i} value={l}>\n                    {l}\n                  </option>\n                ))}\n              </select>\n            </Grid>\n            <Grid item xs={12} sm={4}>\n              <Typography variant=\"subtitle2\">アクティブスキル</Typography>\n              <select\n                value={filter.activeSkill}\n                onChange={(e) =>\n                  setFilter((f) => {\n                    return { ...f, activeSkill: e.currentTarget.value };\n                  })\n                }\n              >\n                <option value={\"\"}></option>\n                {activeSkillList.map((l, i) => (\n                  <option key={\"activeSkill\" + i} value={l}>\n                    {l}\n                  </option>\n                ))}\n              </select>\n            </Grid>\n            <Grid item xs={12} sm={4}>\n              <Typography variant=\"subtitle2\">ライブスキル</Typography>\n              <select\n                value={filter.liveSkill}\n                onChange={(e) =>\n                  setFilter((f) => {\n                    return { ...f, liveSkill: e.currentTarget.value };\n                  })\n                }\n              >\n                <option value={\"\"}></option>\n                {liveSkillList.map((l, i) => (\n                  <option key={\"liveSkill\" + i} value={l}>\n                    {l}\n                  </option>\n                ))}\n              </select>\n            </Grid>\n            <Grid item xs={12}>\n              <Typography variant=\"subtitle2\">対応歌姫</Typography>\n              <ToggleButton\n                key={\"divaAll\"}\n                style={{\n                  paddingLeft: 7,\n                  paddingRight: 7,\n                  paddingTop: 3,\n                  paddingBottom: 3,\n                  marginLeft: 1,\n                }}\n                value={\"all\"}\n                onChange={() =>\n                  setFilter((f) => {\n                    return {\n                      ...f,\n                      compatibleDiva: new Map(defaultCompatibleDivas),\n                    };\n                  })\n                }\n              >\n                ALL\n              </ToggleButton>\n              {generateCompatibleDivaFilter()}\n            </Grid>\n          </Grid>\n        </AccordionDetails>\n      </Accordion>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { useRecoilState, useRecoilValue } from \"recoil\";\nimport { platePagingState, filteredPlateState } from \"../atoms/plate\";\nimport { makeStyles, createStyles } from \"@material-ui/core/styles\";\nimport Pagination from \"@material-ui/lab/Pagination\";\n\nconst useStyles = makeStyles((theme) =>\n  createStyles({\n    root: {\n      \"& > * + *\": {\n        marginTop: theme.spacing(2),\n      },\n      margin: 5,\n    },\n  })\n);\n\ntype PlatePaginationProps = {\n  children?: React.ReactNode;\n};\n\nexport const PlatePagination = (props: PlatePaginationProps) => {\n  const classes = useStyles();\n  const filteredPlates = useRecoilValue(filteredPlateState);\n  const [paging, setPaging] = useRecoilState(platePagingState);\n\n  const count = filteredPlates.count;\n  const pages = count === 0 ? 1 : Math.ceil(count / paging.numberOf);\n  const current = paging.current > pages ? pages : paging.current;\n\n  if (current !== paging.current) {\n    setPaging((p) => {\n      return { ...p, current: current };\n    });\n  }\n\n  const handleChange = (event: React.ChangeEvent<unknown>, value: number) => {\n    setPaging((p) => {\n      return { ...p, current: value };\n    });\n  };\n\n  return (\n    <div className={classes.root}>\n      <Pagination\n        count={pages}\n        size={\"small\"}\n        page={current}\n        variant=\"outlined\"\n        shape=\"rounded\"\n        onChange={handleChange}\n      />\n    </div>\n  );\n};\n","import React from \"react\";\nimport { RecoilRoot } from \"recoil\";\nimport { PlateList } from \"./containers/PlateList\";\nimport { PlateFilter } from \"./components/PlateFilter\";\nimport { PlatePagination } from \"./components/PlatePagination\";\nimport { useRecoilTransactionObserver_UNSTABLE } from \"recoil\";\nimport {\n  favsState,\n  plateFilterSettingState,\n  PlateFilterSetting,\n} from \"./atoms/plate\";\nimport { Container, Divider } from \"@material-ui/core\";\n\nfunction PersistenceObserver() {\n  useRecoilTransactionObserver_UNSTABLE(({ snapshot }) => {\n    // TODO : どのatomが更新されたかわからないので、毎回全部保存してるのでどうにかしたい\n\n    var favs = snapshot.getLoadable(favsState).contents;\n    var favsJson = JSON.stringify(Array.from(favs as Map<string, boolean>));\n    if (localStorage.getItem(favsState.key) !== favsJson) {\n      localStorage.setItem(favsState.key, favsJson);\n    }\n\n    var filter = snapshot.getLoadable(plateFilterSettingState)\n      .contents as PlateFilterSetting;\n\n    var rality = Array.from(filter.rality as Map<string, boolean>);\n    var ralityJson = JSON.stringify(rality);\n    if (localStorage.getItem(\"plateRality\") !== ralityJson) {\n      localStorage.setItem(\"plateRality\", ralityJson);\n    }\n\n    var type = Array.from(filter.attribute as Map<string, boolean>);\n    var typeJson = JSON.stringify(type);\n    if (localStorage.getItem(\"plateAttribute\") !== typeJson) {\n      localStorage.setItem(\"plateAttribute\", typeJson);\n    }\n\n    var effectiveDiva = Array.from(\n      filter.compatibleDiva as Map<string, boolean>\n    );\n    var effectiveDivaJson = JSON.stringify(effectiveDiva);\n    if (localStorage.getItem(\"plateCompatibleDiva\") !== effectiveDivaJson) {\n      localStorage.setItem(\"plateCompatibleDiva\", effectiveDivaJson);\n    }\n\n    var centerSkill = filter.centerSkill;\n    if (localStorage.getItem(\"centerSkill\") !== centerSkill) {\n      localStorage.setItem(\"centerSkill\", centerSkill);\n    }\n    var activeSkill = filter.activeSkill;\n    if (localStorage.getItem(\"activeSkill\") !== activeSkill) {\n      localStorage.setItem(\"activeSkill\", activeSkill);\n    }\n    var liveSkill = filter.liveSkill;\n    if (localStorage.getItem(\"liveSkill\") !== liveSkill) {\n      localStorage.setItem(\"liveSkill\", liveSkill);\n    }\n  });\n  return null;\n}\n\nfunction App() {\n  document.title = \"歌マクロスDB\";\n  return (\n    <RecoilRoot>\n      <PersistenceObserver />\n      <Container\n        maxWidth=\"xl\"\n        style={{ paddingLeft: 2, paddingRight: 2, marginBottom: 2 }}\n      >\n        <PlateFilter />\n        <PlatePagination />\n        <Divider />\n        <PlateList />\n        <Divider />\n        <PlatePagination />\n      </Container>\n    </RecoilRoot>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { red } from \"@material-ui/core/colors\";\nimport { createMuiTheme } from \"@material-ui/core/styles\";\n\n// A custom theme for this app\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: \"#556cd6\",\n    },\n    secondary: {\n      main: \"#19857b\",\n    },\n    error: {\n      main: red.A400,\n    },\n    background: {\n      default: \"#fff\",\n    },\n  },\n});\n\nexport default theme;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { ThemeProvider, CssBaseline } from \"@material-ui/core\";\nimport theme from \"./theme\";\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}